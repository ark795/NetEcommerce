services:
  postgres-order:
    image: postgres
    container_name: postgres-order
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres.pass
      POSTGRES_DB: orderdb
    ports:
      - "5434:5432"
    volumes:
      - pgdata-order:/var/lib/postgresql/data

  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: jaeger
    ports:
      - "6831:6831/udp"  # UDP for Jaeger agent
      - "16686:16686"    # Web UI

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  seq:
    image: datalust/seq
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"

  orderservice:
    image: orderservice:latest
    build:
      context: .
      dockerfile: OrderService.API/Dockerfile
    depends_on:
      - postgres-order
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:80"

  healthchecks-ui:
    image: xabarilcoding/healthchecksui
    container_name: healthchecks-ui
    restart: always
    ports:
      - "5005:80"
    environment:
      - HealthChecksUI__HealthChecks__0__Name=OrderService
      - HealthChecksUI__HealthChecks__0__Uri=http://orderservice/health
      - HealthChecksUI__EvaluationTimeOnSeconds=10
      - HealthChecksUI__MinimumSecondsBetweenFailureNotifications=60

volumes:
  pgdata-order: